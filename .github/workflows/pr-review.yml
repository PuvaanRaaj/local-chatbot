name: LLM Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  llama-review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Fetch base branch
        run: git fetch origin main

      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh
          sudo usermod -aG docker $USER
          docker --version

      - name: Install Docker Model Runner (DMR)
        run: |
          sudo apt-get update
          sudo apt-get install docker-model-plugin
          docker model version

      - name: Restore cached LLM model
        id: cache-llm
        uses: actions/cache@v3
        with:
          path: llama3_model.tar
          key: llama3-model-cache-v1

      - name: Load or Pull LLM model
        run: |
          if [ -f llama3_model.tar ]; then
            echo "Loading model from cache..."
            docker model load -i llama3_model.tar
          else
            echo "Model not found in cache. Pulling..."
            docker model pull ai/llama3.2:latest
            echo "Saving pulled model to tar for caching..."
            docker model save ai/llama3.2:latest -o llama3_model.tar
          fi

      - name: Run LLM Code Review
        run: |
          chmod +x ./review_diff.sh
          ./review_diff.sh > model_review.md

      # - name: Show AI Code Review in Logs
      #   run: |
      #     echo "------ BEGIN AI CODE REVIEW ------"
      #     cat model_review.md
      #     echo "------ END AI CODE REVIEW ------"

      - name: Post AI Comment via API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENT=$(jq -Rs . < model_review.md)
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
            -d "{\"body\": $COMMENT}"
